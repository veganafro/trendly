# Java Gradle CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/language-java/ for more details
#
version: 2
jobs:
    build:
        docker:
            # specify the version you desire here
            - image: circleci/android:api-29

            # Specify service dependencies here if necessary
            # CircleCI maintains a library of pre-built images
            # documented at https://circleci.com/docs/2.0/circleci-images/
            # - image: circleci/postgres:9.4

        working_directory: ~/trendly

        environment:
            # Customize the JVM maximum heap limit
            JVM_OPTS: -Xmx3200m

        steps:
            - checkout

            # Download and cache dependencies
            - restore_cache:
                keys:
                    - v1-dependencies-{{ checksum "build.gradle" }}
                    # fallback to using the latest cache if no exact match is found
                    - v1-dependencies-

            - run:
                name: Download Dependencies
                command: ./gradlew androidDependencies

            - save_cache:
                paths:
                    - ~/.gradle
                key: v1-dependencies-{{ checksum "build.gradle" }}

            # run contract tests
            - run:
                name: Run contract unit tests
                command: ./gradlew :contract:test

            - store_artifacts:
                path: contract/build/reports

            - store_test_results:
                path: contract/build/test-results

            # run presenter tests
            - run:
                name: Run presenter unit tests
                command: ./gradlew :controller:test

            - store_artifacts:
                path: controller/build/reports

            - store_test_results:
                path: controller/build/test-results

            # run injector tests
            - run:
                name: Run injector unit tests
                command: ./gradlew :injector:test

            - store_artifacts:
                path: injector/build/reports

            - store_test_results:
                path: injector/build/test-results

            # run model tests
            - run:
                name: Run model unit tests
                command: ./gradlew :model:test

            - store_artifacts:
                path: model/build/reports

            - store_test_results:
                path: model/build/test-results

            # run networking tests
            - run:
                name: Run networking unit tests
                command: ./gradlew :networking:test

            - store_artifacts:
                path: networking/build/reports

            - store_test_results:
                path: networking/build/test-results

            # run app tests
            - run:
                name: Run app unit tests
                command: ./gradlew :app:test

            - store_artifacts:
                path: app/build/reports

            - store_test_results:
                path: app/build/test-results
